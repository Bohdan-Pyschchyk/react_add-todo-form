{"version":3,"sources":["api/users.ts","components/TodoInfo/TodoInfo.tsx","components/UserInfo/UserInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","TodoInfo","title","completed","UserInfo","user","TodoList","todos","className","map","todo","preparedTodos","userId","users","find","App","useState","setTodos","titleTodo","setTitleTodo","selectUser","setSelectUser","isTitle","setIsTitle","isUser","setIsUser","action","method","onSubmit","event","preventDefault","newUser","newTodo","length","type","placeholder","value","onChange","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7cc47a94.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../UserInfo/UserInfo';\n\nexport interface Todo {\n  id: number,\n  title: string,\n  completed: boolean,\n  userId: number,\n  user?: User | null,\n}\n\ntype Props = {\n  title: string,\n  completed: boolean,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ title, completed }) => (\n  <>\n    <h2 data-cy=\"title\">{title}</h2>\n    <p data-cy=\"status\">{completed ? 'Done' : 'In process'}</p>\n  </>\n);\n","import React from 'react';\n\nexport interface User {\n  id: number,\n  name: string,\n  username: string,\n  email: string,\n}\n\ntype Props = {\n  user?: User | null;\n};\n\nexport const UserInfo: React.FC<Props | null> = ({ user }) => (\n  <>\n    {user && (\n      <>\n        <h2 data-cy=\"username\">{user.name}</h2>\n        <h3 data-cy=\"email\">{user.email}</h3>\n      </>\n    )}\n  </>\n);\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\nimport { UserInfo } from '../UserInfo/UserInfo';\n\ninterface Todo {\n  id: number,\n  title: string,\n  completed: boolean,\n  userId: number,\n  user?: User | null,\n}\n\ninterface User {\n  id: number,\n  name: string,\n  username: string,\n  email: string,\n}\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <ul className=\"todo__list\">\n    {todos.map(todo => (\n      <li className=\"todo__item\">\n        <UserInfo user={todo.user} />\n        <TodoInfo\n          title={todo.title}\n          completed={todo.completed}\n        />\n      </li>\n    ))}\n  </ul>\n);\n","import React, { useState } from 'react';\n\nimport './App.scss';\n\nimport users from './api/users';\nimport todosFromServer from './api/todos';\nimport { Todo } from './components/TodoInfo/TodoInfo';\nimport { TodoList } from './components/TodoList/TodoList';\n\nexport const preparedTodos: Todo[] = todosFromServer.map(todo => {\n  return {\n    ...todo,\n    user: users.find(user => user.id === todo.userId)\n    || null,\n  };\n});\n\nconst App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>(preparedTodos);\n  const [titleTodo, setTitleTodo] = useState('');\n  const [selectUser, setSelectUser] = useState('');\n  const [isTitle, setIsTitle] = useState(false);\n  const [isUser, setIsUser] = useState(false);\n\n  const onSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const newUser = users.find(user => user.name === selectUser) || null;\n\n    let userId = 0;\n\n    if (newUser) {\n      userId = newUser.id;\n    }\n\n    const newTodo: Todo = {\n      id: todos[todos.length - 1].id + 1,\n      title: titleTodo,\n      userId,\n      completed: false,\n      user: newUser,\n    };\n\n    setIsTitle(!titleTodo);\n    setIsUser(!selectUser);\n\n    if (!titleTodo || !selectUser) {\n      return;\n    }\n\n    setTodos([...todos, newTodo]);\n    setTitleTodo('');\n    setSelectUser('');\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={onSubmit}\n      >\n        <div className=\"field__title\">\n          <input\n            type=\"text\"\n            className=\"input\"\n            data-cy=\"titleInput\"\n            placeholder=\"write a title\"\n            value={titleTodo}\n            onChange={event => {\n              setTitleTodo(event.target.value);\n              setIsTitle(false);\n            }}\n          />\n\n          {isTitle && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field__select\">\n          <select\n            className=\"select\"\n            value={selectUser}\n            data-cy=\"userSelect\"\n            onChange={event => {\n              setIsUser(false);\n              setSelectUser(event.target.value);\n            }}\n          >\n            <option value=\"\">\n              Choose a name\n            </option>\n\n            {users.map(user => (\n              <option\n                value={user.name}\n                key={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {isUser && (\n            <span className=\"error\">Please enter a name</span>\n          )}\n        </div>\n\n        <button className=\"button\" type=\"submit\">\n          ADD\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n\nexport default App;\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}